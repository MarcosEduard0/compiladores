State 6 conflicts: 2 shift/reduce
State 15 conflicts: 1 shift/reduce
State 22 conflicts: 24 reduce/reduce
State 26 conflicts: 1 shift/reduce
State 34 conflicts: 1 shift/reduce
State 38 conflicts: 1 shift/reduce
State 42 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 71 conflicts: 6 reduce/reduce
State 85 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 $@1: %empty

    2 ROOT: $@1 CMDs

    3 CMDs: CMD CMDs
    4     | %empty

    5 CMD: A ';'
    6    | VARIAVEL
    7    | CMD_IF
    8    | CMD_WHILE
    9    | CMD_FOR
   10    | ';'

   11 $@2: %empty

   12 CMD: '{' $@2 CMDs '}'

   13 VARIAVEL: LET NOMEVAR
   14         | VAR NOMEVAR
   15         | CONST NOMEVAR

   16 NOMEVAR: ID '=' A ',' NOMEVAR
   17        | ID ',' NOMEVAR
   18        | ID '=' A
   19        | ID

   20 A: ID '=' A
   21  | ID LVALUEPROP '=' A
   22  | ID LVALUEPROP '+' A
   23  | ID LVALUEPROP '-' A
   24  | ID LVALUEPROP
   25  | E
   26  | ID MAISIGUAL A NOMEVAR
   27  | ID LVALUEPROP MAISIGUAL A
   28  | RVALUE

   29 RVALUE: ID MAISMAIS

   30 LVALUEPROP: '[' A ']' LVALUEPROP
   31           | '.' ID LVALUEPROP
   32           | '[' A ']'
   33           | '.' ID

   34 CMD_WHILE: WHILE '(' E_BOOL ')' CMD

   35 CMD_FOR: FOR '(' VARIAVEL ';' E_BOOL ';' A ')' CMD

   36 CMD_IF: IF '(' E_BOOL ')' CMD CMD_ELSE

   37 CMD_ELSE: ELSE CMD
   38         | %empty

   39 E_BOOL: A '<' A
   40       | A '>' A
   41       | A IGUAL A
   42       | A DIFERENTE A
   43       | RVALUE
   44       | E
   45       | BOOL

   46 E: E '+' E
   47  | E '-' E
   48  | E '*' E
   49  | E '/' E
   50  | RVALUE
   51  | F

   52 F: ID
   53  | NUM
   54  | STRING
   55  | ID '(' ')'
   56  | ID '(' ARGs ')'
   57  | '(' E ')'
   58  | '-' F
   59  | F '!'
   60  | '{' '}'
   61  | '[' ']'

   62 ARGs: E ',' ARGs
   63     | E


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 59
    '(' (40) 34 35 36 55 56 57
    ')' (41) 34 35 36 55 56 57
    '*' (42) 48
    '+' (43) 22 46
    ',' (44) 16 17 62
    '-' (45) 23 47 58
    '.' (46) 31 33
    '/' (47) 49
    ';' (59) 5 10 35
    '<' (60) 39
    '=' (61) 16 18 20 21
    '>' (62) 40
    '[' (91) 30 32 61
    ']' (93) 30 32 61
    '{' (123) 12 60
    '}' (125) 12 60
    error (256)
    NUM (258) 53
    STRING (259) 54
    ID (260) 16 17 18 19 20 21 22 23 24 26 27 29 31 33 52 55 56
    IF (261) 36
    BOOL (262) 45
    ELSE (263) 37
    FOR (264) 35
    IGUAL (265) 41
    DIFERENTE (266) 42
    MAISMAIS (267) 29
    WHILE (268) 34
    LET (269) 13
    CONST (270) 15
    VAR (271) 14
    MAISIGUAL (272) 26 27


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    ROOT (36)
        on left: 2
        on right: 0
    $@1 (37)
        on left: 1
        on right: 2
    CMDs (38)
        on left: 3 4
        on right: 2 3 12
    CMD (39)
        on left: 5 6 7 8 9 10 12
        on right: 3 34 35 36 37
    $@2 (40)
        on left: 11
        on right: 12
    VARIAVEL (41)
        on left: 13 14 15
        on right: 6 35
    NOMEVAR (42)
        on left: 16 17 18 19
        on right: 13 14 15 16 17 26
    A (43)
        on left: 20 21 22 23 24 25 26 27 28
        on right: 5 16 18 20 21 22 23 26 27 30 32 35 39 40 41 42
    RVALUE (44)
        on left: 29
        on right: 28 43 50
    LVALUEPROP (45)
        on left: 30 31 32 33
        on right: 21 22 23 24 27 30 31
    CMD_WHILE (46)
        on left: 34
        on right: 8
    CMD_FOR (47)
        on left: 35
        on right: 9
    CMD_IF (48)
        on left: 36
        on right: 7
    CMD_ELSE (49)
        on left: 37 38
        on right: 36
    E_BOOL (50)
        on left: 39 40 41 42 43 44 45
        on right: 34 35 36
    E (51)
        on left: 46 47 48 49 50 51
        on right: 25 44 46 47 48 49 57 62 63
    F (52)
        on left: 52 53 54 55 56 57 58 59 60 61
        on right: 51 58 59
    ARGs (53)
        on left: 62 63
        on right: 56 62


State 0

    0 $accept: . ROOT $end

    $default  reduce using rule 1 ($@1)

    ROOT  go to state 1
    $@1   go to state 2


State 1

    0 $accept: ROOT . $end

    $end  shift, and go to state 3


State 2

    2 ROOT: $@1 . CMDs

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    FOR     shift, and go to state 8
    WHILE   shift, and go to state 9
    LET     shift, and go to state 10
    CONST   shift, and go to state 11
    VAR     shift, and go to state 12
    '-'     shift, and go to state 13
    ';'     shift, and go to state 14
    '{'     shift, and go to state 15
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    $default  reduce using rule 4 (CMDs)

    CMDs       go to state 18
    CMD        go to state 19
    VARIAVEL   go to state 20
    A          go to state 21
    RVALUE     go to state 22
    CMD_WHILE  go to state 23
    CMD_FOR    go to state 24
    CMD_IF     go to state 25
    E          go to state 26
    F          go to state 27


State 3

    0 $accept: ROOT $end .

    $default  accept


State 4

   53 F: NUM .

    $default  reduce using rule 53 (F)


State 5

   54 F: STRING .

    $default  reduce using rule 54 (F)


State 6

   20 A: ID . '=' A
   21  | ID . LVALUEPROP '=' A
   22  | ID . LVALUEPROP '+' A
   23  | ID . LVALUEPROP '-' A
   24  | ID . LVALUEPROP
   26  | ID . MAISIGUAL A NOMEVAR
   27  | ID . LVALUEPROP MAISIGUAL A
   29 RVALUE: ID . MAISMAIS
   52 F: ID .
   55  | ID . '(' ')'
   56  | ID . '(' ARGs ')'

    MAISMAIS   shift, and go to state 28
    MAISIGUAL  shift, and go to state 29
    '='        shift, and go to state 30
    '['        shift, and go to state 31
    '.'        shift, and go to state 32
    '('        shift, and go to state 33

    '['       [reduce using rule 52 (F)]
    '('       [reduce using rule 52 (F)]
    $default  reduce using rule 52 (F)

    LVALUEPROP  go to state 34


State 7

   36 CMD_IF: IF . '(' E_BOOL ')' CMD CMD_ELSE

    '('  shift, and go to state 35


State 8

   35 CMD_FOR: FOR . '(' VARIAVEL ';' E_BOOL ';' A ')' CMD

    '('  shift, and go to state 36


State 9

   34 CMD_WHILE: WHILE . '(' E_BOOL ')' CMD

    '('  shift, and go to state 37


State 10

   13 VARIAVEL: LET . NOMEVAR

    ID  shift, and go to state 38

    NOMEVAR  go to state 39


State 11

   15 VARIAVEL: CONST . NOMEVAR

    ID  shift, and go to state 38

    NOMEVAR  go to state 40


State 12

   14 VARIAVEL: VAR . NOMEVAR

    ID  shift, and go to state 38

    NOMEVAR  go to state 41


State 13

   58 F: '-' . F

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 42
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    F  go to state 44


State 14

   10 CMD: ';' .

    $default  reduce using rule 10 (CMD)


State 15

   12 CMD: '{' . $@2 CMDs '}'
   60 F: '{' . '}'

    '}'  shift, and go to state 45

    '}'       [reduce using rule 11 ($@2)]
    $default  reduce using rule 11 ($@2)

    $@2  go to state 46


State 16

   61 F: '[' . ']'

    ']'  shift, and go to state 47


State 17

   57 F: '(' . E ')'

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 48
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    RVALUE  go to state 49
    E       go to state 50
    F       go to state 27


State 18

    2 ROOT: $@1 CMDs .

    $default  reduce using rule 2 (ROOT)


State 19

    3 CMDs: CMD . CMDs

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    FOR     shift, and go to state 8
    WHILE   shift, and go to state 9
    LET     shift, and go to state 10
    CONST   shift, and go to state 11
    VAR     shift, and go to state 12
    '-'     shift, and go to state 13
    ';'     shift, and go to state 14
    '{'     shift, and go to state 15
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    $default  reduce using rule 4 (CMDs)

    CMDs       go to state 51
    CMD        go to state 19
    VARIAVEL   go to state 20
    A          go to state 21
    RVALUE     go to state 22
    CMD_WHILE  go to state 23
    CMD_FOR    go to state 24
    CMD_IF     go to state 25
    E          go to state 26
    F          go to state 27


State 20

    6 CMD: VARIAVEL .

    $default  reduce using rule 6 (CMD)


State 21

    5 CMD: A . ';'

    ';'  shift, and go to state 52


State 22

   28 A: RVALUE .
   50 E: RVALUE .

    $end       reduce using rule 28 (A)
    $end       [reduce using rule 50 (E)]
    NUM        reduce using rule 28 (A)
    NUM        [reduce using rule 50 (E)]
    STRING     reduce using rule 28 (A)
    STRING     [reduce using rule 50 (E)]
    ID         reduce using rule 28 (A)
    ID         [reduce using rule 50 (E)]
    IF         reduce using rule 28 (A)
    IF         [reduce using rule 50 (E)]
    ELSE       reduce using rule 28 (A)
    ELSE       [reduce using rule 50 (E)]
    FOR        reduce using rule 28 (A)
    FOR        [reduce using rule 50 (E)]
    IGUAL      reduce using rule 28 (A)
    IGUAL      [reduce using rule 50 (E)]
    DIFERENTE  reduce using rule 28 (A)
    DIFERENTE  [reduce using rule 50 (E)]
    WHILE      reduce using rule 28 (A)
    WHILE      [reduce using rule 50 (E)]
    LET        reduce using rule 28 (A)
    LET        [reduce using rule 50 (E)]
    CONST      reduce using rule 28 (A)
    CONST      [reduce using rule 50 (E)]
    VAR        reduce using rule 28 (A)
    VAR        [reduce using rule 50 (E)]
    '+'        reduce using rule 50 (E)
    '-'        reduce using rule 28 (A)
    '-'        [reduce using rule 50 (E)]
    '*'        reduce using rule 50 (E)
    '/'        reduce using rule 50 (E)
    ';'        reduce using rule 28 (A)
    ';'        [reduce using rule 50 (E)]
    '{'        reduce using rule 28 (A)
    '{'        [reduce using rule 50 (E)]
    '}'        reduce using rule 28 (A)
    '}'        [reduce using rule 50 (E)]
    ','        reduce using rule 28 (A)
    ','        [reduce using rule 50 (E)]
    '['        reduce using rule 28 (A)
    '['        [reduce using rule 50 (E)]
    ']'        reduce using rule 28 (A)
    ']'        [reduce using rule 50 (E)]
    '('        reduce using rule 28 (A)
    '('        [reduce using rule 50 (E)]
    ')'        reduce using rule 28 (A)
    ')'        [reduce using rule 50 (E)]
    '<'        reduce using rule 28 (A)
    '<'        [reduce using rule 50 (E)]
    '>'        reduce using rule 28 (A)
    '>'        [reduce using rule 50 (E)]
    $default   reduce using rule 28 (A)


State 23

    8 CMD: CMD_WHILE .

    $default  reduce using rule 8 (CMD)


State 24

    9 CMD: CMD_FOR .

    $default  reduce using rule 9 (CMD)


State 25

    7 CMD: CMD_IF .

    $default  reduce using rule 7 (CMD)


State 26

   25 A: E .
   46 E: E . '+' E
   47  | E . '-' E
   48  | E . '*' E
   49  | E . '/' E

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    '-'       [reduce using rule 25 (A)]
    $default  reduce using rule 25 (A)


State 27

   51 E: F .
   59 F: F . '!'

    '!'  shift, and go to state 57

    $default  reduce using rule 51 (E)


State 28

   29 RVALUE: ID MAISMAIS .

    $default  reduce using rule 29 (RVALUE)


State 29

   26 A: ID MAISIGUAL . A NOMEVAR

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 58
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 30

   20 A: ID '=' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 59
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 31

   30 LVALUEPROP: '[' . A ']' LVALUEPROP
   32           | '[' . A ']'

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 60
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 32

   31 LVALUEPROP: '.' . ID LVALUEPROP
   33           | '.' . ID

    ID  shift, and go to state 61


State 33

   55 F: ID '(' . ')'
   56  | ID '(' . ARGs ')'

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 48
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17
    ')'     shift, and go to state 62

    RVALUE  go to state 49
    E       go to state 63
    F       go to state 27
    ARGs    go to state 64


State 34

   21 A: ID LVALUEPROP . '=' A
   22  | ID LVALUEPROP . '+' A
   23  | ID LVALUEPROP . '-' A
   24  | ID LVALUEPROP .
   27  | ID LVALUEPROP . MAISIGUAL A

    MAISIGUAL  shift, and go to state 65
    '+'        shift, and go to state 66
    '-'        shift, and go to state 67
    '='        shift, and go to state 68

    '-'       [reduce using rule 24 (A)]
    $default  reduce using rule 24 (A)


State 35

   36 CMD_IF: IF '(' . E_BOOL ')' CMD CMD_ELSE

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    BOOL    shift, and go to state 69
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 70
    RVALUE  go to state 71
    E_BOOL  go to state 72
    E       go to state 73
    F       go to state 27


State 36

   35 CMD_FOR: FOR '(' . VARIAVEL ';' E_BOOL ';' A ')' CMD

    LET    shift, and go to state 10
    CONST  shift, and go to state 11
    VAR    shift, and go to state 12

    VARIAVEL  go to state 74


State 37

   34 CMD_WHILE: WHILE '(' . E_BOOL ')' CMD

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    BOOL    shift, and go to state 69
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 70
    RVALUE  go to state 71
    E_BOOL  go to state 75
    E       go to state 73
    F       go to state 27


State 38

   16 NOMEVAR: ID . '=' A ',' NOMEVAR
   17        | ID . ',' NOMEVAR
   18        | ID . '=' A
   19        | ID .

    '='  shift, and go to state 76
    ','  shift, and go to state 77

    ','       [reduce using rule 19 (NOMEVAR)]
    $default  reduce using rule 19 (NOMEVAR)


State 39

   13 VARIAVEL: LET NOMEVAR .

    $default  reduce using rule 13 (VARIAVEL)


State 40

   15 VARIAVEL: CONST NOMEVAR .

    $default  reduce using rule 15 (VARIAVEL)


State 41

   14 VARIAVEL: VAR NOMEVAR .

    $default  reduce using rule 14 (VARIAVEL)


State 42

   52 F: ID .
   55  | ID . '(' ')'
   56  | ID . '(' ARGs ')'

    '('  shift, and go to state 33

    '('       [reduce using rule 52 (F)]
    $default  reduce using rule 52 (F)


State 43

   60 F: '{' . '}'

    '}'  shift, and go to state 45


State 44

   58 F: '-' F .
   59  | F . '!'

    '!'  shift, and go to state 57

    '!'       [reduce using rule 58 (F)]
    $default  reduce using rule 58 (F)


State 45

   60 F: '{' '}' .

    $default  reduce using rule 60 (F)


State 46

   12 CMD: '{' $@2 . CMDs '}'

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    FOR     shift, and go to state 8
    WHILE   shift, and go to state 9
    LET     shift, and go to state 10
    CONST   shift, and go to state 11
    VAR     shift, and go to state 12
    '-'     shift, and go to state 13
    ';'     shift, and go to state 14
    '{'     shift, and go to state 15
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    $default  reduce using rule 4 (CMDs)

    CMDs       go to state 78
    CMD        go to state 19
    VARIAVEL   go to state 20
    A          go to state 21
    RVALUE     go to state 22
    CMD_WHILE  go to state 23
    CMD_FOR    go to state 24
    CMD_IF     go to state 25
    E          go to state 26
    F          go to state 27


State 47

   61 F: '[' ']' .

    $default  reduce using rule 61 (F)


State 48

   29 RVALUE: ID . MAISMAIS
   52 F: ID .
   55  | ID . '(' ')'
   56  | ID . '(' ARGs ')'

    MAISMAIS  shift, and go to state 28
    '('       shift, and go to state 33

    '('       [reduce using rule 52 (F)]
    $default  reduce using rule 52 (F)


State 49

   50 E: RVALUE .

    $default  reduce using rule 50 (E)


State 50

   46 E: E . '+' E
   47  | E . '-' E
   48  | E . '*' E
   49  | E . '/' E
   57 F: '(' E . ')'

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ')'  shift, and go to state 79


State 51

    3 CMDs: CMD CMDs .

    $default  reduce using rule 3 (CMDs)


State 52

    5 CMD: A ';' .

    $default  reduce using rule 5 (CMD)


State 53

   46 E: E '+' . E

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 48
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    RVALUE  go to state 49
    E       go to state 80
    F       go to state 27


State 54

   47 E: E '-' . E

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 48
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    RVALUE  go to state 49
    E       go to state 81
    F       go to state 27


State 55

   48 E: E '*' . E

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 48
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    RVALUE  go to state 49
    E       go to state 82
    F       go to state 27


State 56

   49 E: E '/' . E

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 48
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    RVALUE  go to state 49
    E       go to state 83
    F       go to state 27


State 57

   59 F: F '!' .

    $default  reduce using rule 59 (F)


State 58

   26 A: ID MAISIGUAL A . NOMEVAR

    ID  shift, and go to state 38

    NOMEVAR  go to state 84


State 59

   20 A: ID '=' A .

    $default  reduce using rule 20 (A)


State 60

   30 LVALUEPROP: '[' A . ']' LVALUEPROP
   32           | '[' A . ']'

    ']'  shift, and go to state 85


State 61

   31 LVALUEPROP: '.' ID . LVALUEPROP
   33           | '.' ID .

    '['  shift, and go to state 31
    '.'  shift, and go to state 32

    '['       [reduce using rule 33 (LVALUEPROP)]
    $default  reduce using rule 33 (LVALUEPROP)

    LVALUEPROP  go to state 86


State 62

   55 F: ID '(' ')' .

    $default  reduce using rule 55 (F)


State 63

   46 E: E . '+' E
   47  | E . '-' E
   48  | E . '*' E
   49  | E . '/' E
   62 ARGs: E . ',' ARGs
   63     | E .

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    ','  shift, and go to state 87

    $default  reduce using rule 63 (ARGs)


State 64

   56 F: ID '(' ARGs . ')'

    ')'  shift, and go to state 88


State 65

   27 A: ID LVALUEPROP MAISIGUAL . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 89
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 66

   22 A: ID LVALUEPROP '+' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 90
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 67

   23 A: ID LVALUEPROP '-' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 91
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 68

   21 A: ID LVALUEPROP '=' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 92
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 69

   45 E_BOOL: BOOL .

    $default  reduce using rule 45 (E_BOOL)


State 70

   39 E_BOOL: A . '<' A
   40       | A . '>' A
   41       | A . IGUAL A
   42       | A . DIFERENTE A

    IGUAL      shift, and go to state 93
    DIFERENTE  shift, and go to state 94
    '<'        shift, and go to state 95
    '>'        shift, and go to state 96


State 71

   28 A: RVALUE .
   43 E_BOOL: RVALUE .
   50 E: RVALUE .

    IGUAL      reduce using rule 28 (A)
    IGUAL      [reduce using rule 50 (E)]
    DIFERENTE  reduce using rule 28 (A)
    DIFERENTE  [reduce using rule 50 (E)]
    '+'        reduce using rule 50 (E)
    '-'        reduce using rule 50 (E)
    '*'        reduce using rule 50 (E)
    '/'        reduce using rule 50 (E)
    ';'        reduce using rule 43 (E_BOOL)
    ';'        [reduce using rule 50 (E)]
    ')'        reduce using rule 43 (E_BOOL)
    ')'        [reduce using rule 50 (E)]
    '<'        reduce using rule 28 (A)
    '<'        [reduce using rule 50 (E)]
    '>'        reduce using rule 28 (A)
    '>'        [reduce using rule 50 (E)]
    $default   reduce using rule 28 (A)


State 72

   36 CMD_IF: IF '(' E_BOOL . ')' CMD CMD_ELSE

    ')'  shift, and go to state 97


State 73

   25 A: E .
   44 E_BOOL: E .
   46 E: E . '+' E
   47  | E . '-' E
   48  | E . '*' E
   49  | E . '/' E

    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    ';'       reduce using rule 44 (E_BOOL)
    ')'       reduce using rule 44 (E_BOOL)
    $default  reduce using rule 25 (A)


State 74

   35 CMD_FOR: FOR '(' VARIAVEL . ';' E_BOOL ';' A ')' CMD

    ';'  shift, and go to state 98


State 75

   34 CMD_WHILE: WHILE '(' E_BOOL . ')' CMD

    ')'  shift, and go to state 99


State 76

   16 NOMEVAR: ID '=' . A ',' NOMEVAR
   18        | ID '=' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 100
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 77

   17 NOMEVAR: ID ',' . NOMEVAR

    ID  shift, and go to state 38

    NOMEVAR  go to state 101


State 78

   12 CMD: '{' $@2 CMDs . '}'

    '}'  shift, and go to state 102


State 79

   57 F: '(' E ')' .

    $default  reduce using rule 57 (F)


State 80

   46 E: E . '+' E
   46  | E '+' E .
   47  | E . '-' E
   48  | E . '*' E
   49  | E . '/' E

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 46 (E)


State 81

   46 E: E . '+' E
   47  | E . '-' E
   47  | E '-' E .
   48  | E . '*' E
   49  | E . '/' E

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 47 (E)


State 82

   46 E: E . '+' E
   47  | E . '-' E
   48  | E . '*' E
   48  | E '*' E .
   49  | E . '/' E

    $default  reduce using rule 48 (E)


State 83

   46 E: E . '+' E
   47  | E . '-' E
   48  | E . '*' E
   49  | E . '/' E
   49  | E '/' E .

    $default  reduce using rule 49 (E)


State 84

   26 A: ID MAISIGUAL A NOMEVAR .

    $default  reduce using rule 26 (A)


State 85

   30 LVALUEPROP: '[' A ']' . LVALUEPROP
   32           | '[' A ']' .

    '['  shift, and go to state 31
    '.'  shift, and go to state 32

    '['       [reduce using rule 32 (LVALUEPROP)]
    $default  reduce using rule 32 (LVALUEPROP)

    LVALUEPROP  go to state 103


State 86

   31 LVALUEPROP: '.' ID LVALUEPROP .

    $default  reduce using rule 31 (LVALUEPROP)


State 87

   62 ARGs: E ',' . ARGs

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 48
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    RVALUE  go to state 49
    E       go to state 63
    F       go to state 27
    ARGs    go to state 104


State 88

   56 F: ID '(' ARGs ')' .

    $default  reduce using rule 56 (F)


State 89

   27 A: ID LVALUEPROP MAISIGUAL A .

    $default  reduce using rule 27 (A)


State 90

   22 A: ID LVALUEPROP '+' A .

    $default  reduce using rule 22 (A)


State 91

   23 A: ID LVALUEPROP '-' A .

    $default  reduce using rule 23 (A)


State 92

   21 A: ID LVALUEPROP '=' A .

    $default  reduce using rule 21 (A)


State 93

   41 E_BOOL: A IGUAL . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 105
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 94

   42 E_BOOL: A DIFERENTE . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 106
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 95

   39 E_BOOL: A '<' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 107
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 96

   40 E_BOOL: A '>' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 108
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 97

   36 CMD_IF: IF '(' E_BOOL ')' . CMD CMD_ELSE

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    FOR     shift, and go to state 8
    WHILE   shift, and go to state 9
    LET     shift, and go to state 10
    CONST   shift, and go to state 11
    VAR     shift, and go to state 12
    '-'     shift, and go to state 13
    ';'     shift, and go to state 14
    '{'     shift, and go to state 15
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    CMD        go to state 109
    VARIAVEL   go to state 20
    A          go to state 21
    RVALUE     go to state 22
    CMD_WHILE  go to state 23
    CMD_FOR    go to state 24
    CMD_IF     go to state 25
    E          go to state 26
    F          go to state 27


State 98

   35 CMD_FOR: FOR '(' VARIAVEL ';' . E_BOOL ';' A ')' CMD

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    BOOL    shift, and go to state 69
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 70
    RVALUE  go to state 71
    E_BOOL  go to state 110
    E       go to state 73
    F       go to state 27


State 99

   34 CMD_WHILE: WHILE '(' E_BOOL ')' . CMD

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    FOR     shift, and go to state 8
    WHILE   shift, and go to state 9
    LET     shift, and go to state 10
    CONST   shift, and go to state 11
    VAR     shift, and go to state 12
    '-'     shift, and go to state 13
    ';'     shift, and go to state 14
    '{'     shift, and go to state 15
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    CMD        go to state 111
    VARIAVEL   go to state 20
    A          go to state 21
    RVALUE     go to state 22
    CMD_WHILE  go to state 23
    CMD_FOR    go to state 24
    CMD_IF     go to state 25
    E          go to state 26
    F          go to state 27


State 100

   16 NOMEVAR: ID '=' A . ',' NOMEVAR
   18        | ID '=' A .

    ','  shift, and go to state 112

    ','       [reduce using rule 18 (NOMEVAR)]
    $default  reduce using rule 18 (NOMEVAR)


State 101

   17 NOMEVAR: ID ',' NOMEVAR .

    $default  reduce using rule 17 (NOMEVAR)


State 102

   12 CMD: '{' $@2 CMDs '}' .

    $default  reduce using rule 12 (CMD)


State 103

   30 LVALUEPROP: '[' A ']' LVALUEPROP .

    $default  reduce using rule 30 (LVALUEPROP)


State 104

   62 ARGs: E ',' ARGs .

    $default  reduce using rule 62 (ARGs)


State 105

   41 E_BOOL: A IGUAL A .

    $default  reduce using rule 41 (E_BOOL)


State 106

   42 E_BOOL: A DIFERENTE A .

    $default  reduce using rule 42 (E_BOOL)


State 107

   39 E_BOOL: A '<' A .

    $default  reduce using rule 39 (E_BOOL)


State 108

   40 E_BOOL: A '>' A .

    $default  reduce using rule 40 (E_BOOL)


State 109

   36 CMD_IF: IF '(' E_BOOL ')' CMD . CMD_ELSE

    ELSE  shift, and go to state 113

    ELSE      [reduce using rule 38 (CMD_ELSE)]
    $default  reduce using rule 38 (CMD_ELSE)

    CMD_ELSE  go to state 114


State 110

   35 CMD_FOR: FOR '(' VARIAVEL ';' E_BOOL . ';' A ')' CMD

    ';'  shift, and go to state 115


State 111

   34 CMD_WHILE: WHILE '(' E_BOOL ')' CMD .

    $default  reduce using rule 34 (CMD_WHILE)


State 112

   16 NOMEVAR: ID '=' A ',' . NOMEVAR

    ID  shift, and go to state 38

    NOMEVAR  go to state 116


State 113

   37 CMD_ELSE: ELSE . CMD

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    FOR     shift, and go to state 8
    WHILE   shift, and go to state 9
    LET     shift, and go to state 10
    CONST   shift, and go to state 11
    VAR     shift, and go to state 12
    '-'     shift, and go to state 13
    ';'     shift, and go to state 14
    '{'     shift, and go to state 15
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    CMD        go to state 117
    VARIAVEL   go to state 20
    A          go to state 21
    RVALUE     go to state 22
    CMD_WHILE  go to state 23
    CMD_FOR    go to state 24
    CMD_IF     go to state 25
    E          go to state 26
    F          go to state 27


State 114

   36 CMD_IF: IF '(' E_BOOL ')' CMD CMD_ELSE .

    $default  reduce using rule 36 (CMD_IF)


State 115

   35 CMD_FOR: FOR '(' VARIAVEL ';' E_BOOL ';' . A ')' CMD

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 13
    '{'     shift, and go to state 43
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    A       go to state 118
    RVALUE  go to state 22
    E       go to state 26
    F       go to state 27


State 116

   16 NOMEVAR: ID '=' A ',' NOMEVAR .

    $default  reduce using rule 16 (NOMEVAR)


State 117

   37 CMD_ELSE: ELSE CMD .

    $default  reduce using rule 37 (CMD_ELSE)


State 118

   35 CMD_FOR: FOR '(' VARIAVEL ';' E_BOOL ';' A . ')' CMD

    ')'  shift, and go to state 119


State 119

   35 CMD_FOR: FOR '(' VARIAVEL ';' E_BOOL ';' A ')' . CMD

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    FOR     shift, and go to state 8
    WHILE   shift, and go to state 9
    LET     shift, and go to state 10
    CONST   shift, and go to state 11
    VAR     shift, and go to state 12
    '-'     shift, and go to state 13
    ';'     shift, and go to state 14
    '{'     shift, and go to state 15
    '['     shift, and go to state 16
    '('     shift, and go to state 17

    CMD        go to state 120
    VARIAVEL   go to state 20
    A          go to state 21
    RVALUE     go to state 22
    CMD_WHILE  go to state 23
    CMD_FOR    go to state 24
    CMD_IF     go to state 25
    E          go to state 26
    F          go to state 27


State 120

   35 CMD_FOR: FOR '(' VARIAVEL ';' E_BOOL ';' A ')' CMD .

    $default  reduce using rule 35 (CMD_FOR)
