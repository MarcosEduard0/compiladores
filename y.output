State 6 conflicts: 2 shift/reduce
State 14 conflicts: 1 shift/reduce
State 21 conflicts: 23 reduce/reduce
State 24 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce
State 35 conflicts: 1 shift/reduce
State 39 conflicts: 1 shift/reduce
State 41 conflicts: 1 shift/reduce
State 45 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 68 conflicts: 5 reduce/reduce
State 82 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 $@1: %empty

    2 ROOT: $@1 CMDs

    3 CMDs: CMD CMDs
    4     | %empty

    5 CMD: A ';'
    6    | VARIAVEL
    7    | CMD_IF
    8    | CMD_WHILE
    9    | ';'

   10 $@2: %empty

   11 CMD: '{' $@2 CMDs '}'

   12 VARIAVEL: LET NOMEVAR
   13         | VAR NOMEVAR
   14         | CONST NOMEVAR

   15 NOMEVAR: ID '=' A OUTRAVAR
   16        | ID OUTRAVAR

   17 OUTRAVAR: ',' NOMEVAR
   18         | %empty

   19 A: ID '=' A
   20  | ID LVALUEPROP '=' A
   21  | ID LVALUEPROP '+' A
   22  | ID LVALUEPROP '-' A
   23  | ID LVALUEPROP
   24  | E
   25  | ID MAISIGUAL A OUTRAVAR
   26  | ID LVALUEPROP MAISIGUAL A
   27  | RVALUE

   28 RVALUE: ID MAISMAIS

   29 LVALUEPROP: '[' A ']' LVALUEPROP
   30           | '.' ID LVALUEPROP
   31           | '[' A ']'
   32           | '.' ID

   33 CMD_WHILE: WHILE '(' EBOOL ')' CMD

   34 CMD_IF: IF '(' EBOOL ')' CMD CMD_ELSE

   35 CMD_ELSE: ELSE CMD
   36         | %empty

   37 EBOOL: A '<' A
   38      | A '>' A
   39      | A IGUAL A
   40      | A DIFERENTE A
   41      | RVALUE
   42      | E
   43      | BOOL

   44 E: E '+' E
   45  | E '-' E
   46  | E '*' E
   47  | E '/' E
   48  | RVALUE
   49  | F

   50 F: ID
   51  | NUM
   52  | STRING
   53  | ID '(' ')'
   54  | ID '(' ARGs ')'
   55  | '(' E ')'
   56  | '-' F
   57  | F '!'
   58  | '{' '}'
   59  | '[' ']'

   60 ARGs: E ',' ARGs
   61     | E


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 57
    '(' (40) 33 34 53 54 55
    ')' (41) 33 34 53 54 55
    '*' (42) 46
    '+' (43) 21 44
    ',' (44) 17 60
    '-' (45) 22 45 56
    '.' (46) 30 32
    '/' (47) 47
    ';' (59) 5 9
    '<' (60) 37
    '=' (61) 15 19 20
    '>' (62) 38
    '[' (91) 29 31 59
    ']' (93) 29 31 59
    '{' (123) 11 58
    '}' (125) 11 58
    error (256)
    NUM (258) 51
    STRING (259) 52
    ID (260) 15 16 19 20 21 22 23 25 26 28 30 32 50 53 54
    IF (261) 34
    BOOL (262) 43
    ELSE (263) 35
    IGUAL (264) 39
    DIFERENTE (265) 40
    MAISMAIS (266) 28
    WHILE (267) 33
    LET (268) 12
    CONST (269) 14
    VAR (270) 13
    MAISIGUAL (271) 25 26


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    ROOT (35)
        on left: 2
        on right: 0
    $@1 (36)
        on left: 1
        on right: 2
    CMDs (37)
        on left: 3 4
        on right: 2 3 11
    CMD (38)
        on left: 5 6 7 8 9 11
        on right: 3 33 34 35
    $@2 (39)
        on left: 10
        on right: 11
    VARIAVEL (40)
        on left: 12 13 14
        on right: 6
    NOMEVAR (41)
        on left: 15 16
        on right: 12 13 14 17
    OUTRAVAR (42)
        on left: 17 18
        on right: 15 16 25
    A (43)
        on left: 19 20 21 22 23 24 25 26 27
        on right: 5 15 19 20 21 22 25 26 29 31 37 38 39 40
    RVALUE (44)
        on left: 28
        on right: 27 41 48
    LVALUEPROP (45)
        on left: 29 30 31 32
        on right: 20 21 22 23 26 29 30
    CMD_WHILE (46)
        on left: 33
        on right: 8
    CMD_IF (47)
        on left: 34
        on right: 7
    CMD_ELSE (48)
        on left: 35 36
        on right: 34
    EBOOL (49)
        on left: 37 38 39 40 41 42 43
        on right: 33 34
    E (50)
        on left: 44 45 46 47 48 49
        on right: 24 42 44 45 46 47 55 60 61
    F (51)
        on left: 50 51 52 53 54 55 56 57 58 59
        on right: 49 56 57
    ARGs (52)
        on left: 60 61
        on right: 54 60


State 0

    0 $accept: . ROOT $end

    $default  reduce using rule 1 ($@1)

    ROOT  go to state 1
    $@1   go to state 2


State 1

    0 $accept: ROOT . $end

    $end  shift, and go to state 3


State 2

    2 ROOT: $@1 . CMDs

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    LET     shift, and go to state 9
    CONST   shift, and go to state 10
    VAR     shift, and go to state 11
    '-'     shift, and go to state 12
    ';'     shift, and go to state 13
    '{'     shift, and go to state 14
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    $default  reduce using rule 4 (CMDs)

    CMDs       go to state 17
    CMD        go to state 18
    VARIAVEL   go to state 19
    A          go to state 20
    RVALUE     go to state 21
    CMD_WHILE  go to state 22
    CMD_IF     go to state 23
    E          go to state 24
    F          go to state 25


State 3

    0 $accept: ROOT $end .

    $default  accept


State 4

   51 F: NUM .

    $default  reduce using rule 51 (F)


State 5

   52 F: STRING .

    $default  reduce using rule 52 (F)


State 6

   19 A: ID . '=' A
   20  | ID . LVALUEPROP '=' A
   21  | ID . LVALUEPROP '+' A
   22  | ID . LVALUEPROP '-' A
   23  | ID . LVALUEPROP
   25  | ID . MAISIGUAL A OUTRAVAR
   26  | ID . LVALUEPROP MAISIGUAL A
   28 RVALUE: ID . MAISMAIS
   50 F: ID .
   53  | ID . '(' ')'
   54  | ID . '(' ARGs ')'

    MAISMAIS   shift, and go to state 26
    MAISIGUAL  shift, and go to state 27
    '='        shift, and go to state 28
    '['        shift, and go to state 29
    '.'        shift, and go to state 30
    '('        shift, and go to state 31

    '['       [reduce using rule 50 (F)]
    '('       [reduce using rule 50 (F)]
    $default  reduce using rule 50 (F)

    LVALUEPROP  go to state 32


State 7

   34 CMD_IF: IF . '(' EBOOL ')' CMD CMD_ELSE

    '('  shift, and go to state 33


State 8

   33 CMD_WHILE: WHILE . '(' EBOOL ')' CMD

    '('  shift, and go to state 34


State 9

   12 VARIAVEL: LET . NOMEVAR

    ID  shift, and go to state 35

    NOMEVAR  go to state 36


State 10

   14 VARIAVEL: CONST . NOMEVAR

    ID  shift, and go to state 35

    NOMEVAR  go to state 37


State 11

   13 VARIAVEL: VAR . NOMEVAR

    ID  shift, and go to state 35

    NOMEVAR  go to state 38


State 12

   56 F: '-' . F

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 39
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    F  go to state 41


State 13

    9 CMD: ';' .

    $default  reduce using rule 9 (CMD)


State 14

   11 CMD: '{' . $@2 CMDs '}'
   58 F: '{' . '}'

    '}'  shift, and go to state 42

    '}'       [reduce using rule 10 ($@2)]
    $default  reduce using rule 10 ($@2)

    $@2  go to state 43


State 15

   59 F: '[' . ']'

    ']'  shift, and go to state 44


State 16

   55 F: '(' . E ')'

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 45
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    RVALUE  go to state 46
    E       go to state 47
    F       go to state 25


State 17

    2 ROOT: $@1 CMDs .

    $default  reduce using rule 2 (ROOT)


State 18

    3 CMDs: CMD . CMDs

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    LET     shift, and go to state 9
    CONST   shift, and go to state 10
    VAR     shift, and go to state 11
    '-'     shift, and go to state 12
    ';'     shift, and go to state 13
    '{'     shift, and go to state 14
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    $default  reduce using rule 4 (CMDs)

    CMDs       go to state 48
    CMD        go to state 18
    VARIAVEL   go to state 19
    A          go to state 20
    RVALUE     go to state 21
    CMD_WHILE  go to state 22
    CMD_IF     go to state 23
    E          go to state 24
    F          go to state 25


State 19

    6 CMD: VARIAVEL .

    $default  reduce using rule 6 (CMD)


State 20

    5 CMD: A . ';'

    ';'  shift, and go to state 49


State 21

   27 A: RVALUE .
   48 E: RVALUE .

    $end       reduce using rule 27 (A)
    $end       [reduce using rule 48 (E)]
    NUM        reduce using rule 27 (A)
    NUM        [reduce using rule 48 (E)]
    STRING     reduce using rule 27 (A)
    STRING     [reduce using rule 48 (E)]
    ID         reduce using rule 27 (A)
    ID         [reduce using rule 48 (E)]
    IF         reduce using rule 27 (A)
    IF         [reduce using rule 48 (E)]
    ELSE       reduce using rule 27 (A)
    ELSE       [reduce using rule 48 (E)]
    IGUAL      reduce using rule 27 (A)
    IGUAL      [reduce using rule 48 (E)]
    DIFERENTE  reduce using rule 27 (A)
    DIFERENTE  [reduce using rule 48 (E)]
    WHILE      reduce using rule 27 (A)
    WHILE      [reduce using rule 48 (E)]
    LET        reduce using rule 27 (A)
    LET        [reduce using rule 48 (E)]
    CONST      reduce using rule 27 (A)
    CONST      [reduce using rule 48 (E)]
    VAR        reduce using rule 27 (A)
    VAR        [reduce using rule 48 (E)]
    '+'        reduce using rule 48 (E)
    '-'        reduce using rule 27 (A)
    '-'        [reduce using rule 48 (E)]
    '*'        reduce using rule 48 (E)
    '/'        reduce using rule 48 (E)
    ';'        reduce using rule 27 (A)
    ';'        [reduce using rule 48 (E)]
    '{'        reduce using rule 27 (A)
    '{'        [reduce using rule 48 (E)]
    '}'        reduce using rule 27 (A)
    '}'        [reduce using rule 48 (E)]
    ','        reduce using rule 27 (A)
    ','        [reduce using rule 48 (E)]
    '['        reduce using rule 27 (A)
    '['        [reduce using rule 48 (E)]
    ']'        reduce using rule 27 (A)
    ']'        [reduce using rule 48 (E)]
    '('        reduce using rule 27 (A)
    '('        [reduce using rule 48 (E)]
    ')'        reduce using rule 27 (A)
    ')'        [reduce using rule 48 (E)]
    '<'        reduce using rule 27 (A)
    '<'        [reduce using rule 48 (E)]
    '>'        reduce using rule 27 (A)
    '>'        [reduce using rule 48 (E)]
    $default   reduce using rule 27 (A)


State 22

    8 CMD: CMD_WHILE .

    $default  reduce using rule 8 (CMD)


State 23

    7 CMD: CMD_IF .

    $default  reduce using rule 7 (CMD)


State 24

   24 A: E .
   44 E: E . '+' E
   45  | E . '-' E
   46  | E . '*' E
   47  | E . '/' E

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    '-'       [reduce using rule 24 (A)]
    $default  reduce using rule 24 (A)


State 25

   49 E: F .
   57 F: F . '!'

    '!'  shift, and go to state 54

    $default  reduce using rule 49 (E)


State 26

   28 RVALUE: ID MAISMAIS .

    $default  reduce using rule 28 (RVALUE)


State 27

   25 A: ID MAISIGUAL . A OUTRAVAR

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 55
    RVALUE  go to state 21
    E       go to state 24
    F       go to state 25


State 28

   19 A: ID '=' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 56
    RVALUE  go to state 21
    E       go to state 24
    F       go to state 25


State 29

   29 LVALUEPROP: '[' . A ']' LVALUEPROP
   31           | '[' . A ']'

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 57
    RVALUE  go to state 21
    E       go to state 24
    F       go to state 25


State 30

   30 LVALUEPROP: '.' . ID LVALUEPROP
   32           | '.' . ID

    ID  shift, and go to state 58


State 31

   53 F: ID '(' . ')'
   54  | ID '(' . ARGs ')'

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 45
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16
    ')'     shift, and go to state 59

    RVALUE  go to state 46
    E       go to state 60
    F       go to state 25
    ARGs    go to state 61


State 32

   20 A: ID LVALUEPROP . '=' A
   21  | ID LVALUEPROP . '+' A
   22  | ID LVALUEPROP . '-' A
   23  | ID LVALUEPROP .
   26  | ID LVALUEPROP . MAISIGUAL A

    MAISIGUAL  shift, and go to state 62
    '+'        shift, and go to state 63
    '-'        shift, and go to state 64
    '='        shift, and go to state 65

    '-'       [reduce using rule 23 (A)]
    $default  reduce using rule 23 (A)


State 33

   34 CMD_IF: IF '(' . EBOOL ')' CMD CMD_ELSE

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    BOOL    shift, and go to state 66
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 67
    RVALUE  go to state 68
    EBOOL   go to state 69
    E       go to state 70
    F       go to state 25


State 34

   33 CMD_WHILE: WHILE '(' . EBOOL ')' CMD

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    BOOL    shift, and go to state 66
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 67
    RVALUE  go to state 68
    EBOOL   go to state 71
    E       go to state 70
    F       go to state 25


State 35

   15 NOMEVAR: ID . '=' A OUTRAVAR
   16        | ID . OUTRAVAR

    '='  shift, and go to state 72
    ','  shift, and go to state 73

    ','       [reduce using rule 18 (OUTRAVAR)]
    $default  reduce using rule 18 (OUTRAVAR)

    OUTRAVAR  go to state 74


State 36

   12 VARIAVEL: LET NOMEVAR .

    $default  reduce using rule 12 (VARIAVEL)


State 37

   14 VARIAVEL: CONST NOMEVAR .

    $default  reduce using rule 14 (VARIAVEL)


State 38

   13 VARIAVEL: VAR NOMEVAR .

    $default  reduce using rule 13 (VARIAVEL)


State 39

   50 F: ID .
   53  | ID . '(' ')'
   54  | ID . '(' ARGs ')'

    '('  shift, and go to state 31

    '('       [reduce using rule 50 (F)]
    $default  reduce using rule 50 (F)


State 40

   58 F: '{' . '}'

    '}'  shift, and go to state 42


State 41

   56 F: '-' F .
   57  | F . '!'

    '!'  shift, and go to state 54

    '!'       [reduce using rule 56 (F)]
    $default  reduce using rule 56 (F)


State 42

   58 F: '{' '}' .

    $default  reduce using rule 58 (F)


State 43

   11 CMD: '{' $@2 . CMDs '}'

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    LET     shift, and go to state 9
    CONST   shift, and go to state 10
    VAR     shift, and go to state 11
    '-'     shift, and go to state 12
    ';'     shift, and go to state 13
    '{'     shift, and go to state 14
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    $default  reduce using rule 4 (CMDs)

    CMDs       go to state 75
    CMD        go to state 18
    VARIAVEL   go to state 19
    A          go to state 20
    RVALUE     go to state 21
    CMD_WHILE  go to state 22
    CMD_IF     go to state 23
    E          go to state 24
    F          go to state 25


State 44

   59 F: '[' ']' .

    $default  reduce using rule 59 (F)


State 45

   28 RVALUE: ID . MAISMAIS
   50 F: ID .
   53  | ID . '(' ')'
   54  | ID . '(' ARGs ')'

    MAISMAIS  shift, and go to state 26
    '('       shift, and go to state 31

    '('       [reduce using rule 50 (F)]
    $default  reduce using rule 50 (F)


State 46

   48 E: RVALUE .

    $default  reduce using rule 48 (E)


State 47

   44 E: E . '+' E
   45  | E . '-' E
   46  | E . '*' E
   47  | E . '/' E
   55 F: '(' E . ')'

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    ')'  shift, and go to state 76


State 48

    3 CMDs: CMD CMDs .

    $default  reduce using rule 3 (CMDs)


State 49

    5 CMD: A ';' .

    $default  reduce using rule 5 (CMD)


State 50

   44 E: E '+' . E

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 45
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    RVALUE  go to state 46
    E       go to state 77
    F       go to state 25


State 51

   45 E: E '-' . E

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 45
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    RVALUE  go to state 46
    E       go to state 78
    F       go to state 25


State 52

   46 E: E '*' . E

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 45
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    RVALUE  go to state 46
    E       go to state 79
    F       go to state 25


State 53

   47 E: E '/' . E

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 45
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    RVALUE  go to state 46
    E       go to state 80
    F       go to state 25


State 54

   57 F: F '!' .

    $default  reduce using rule 57 (F)


State 55

   25 A: ID MAISIGUAL A . OUTRAVAR

    ','  shift, and go to state 73

    ','       [reduce using rule 18 (OUTRAVAR)]
    $default  reduce using rule 18 (OUTRAVAR)

    OUTRAVAR  go to state 81


State 56

   19 A: ID '=' A .

    $default  reduce using rule 19 (A)


State 57

   29 LVALUEPROP: '[' A . ']' LVALUEPROP
   31           | '[' A . ']'

    ']'  shift, and go to state 82


State 58

   30 LVALUEPROP: '.' ID . LVALUEPROP
   32           | '.' ID .

    '['  shift, and go to state 29
    '.'  shift, and go to state 30

    '['       [reduce using rule 32 (LVALUEPROP)]
    $default  reduce using rule 32 (LVALUEPROP)

    LVALUEPROP  go to state 83


State 59

   53 F: ID '(' ')' .

    $default  reduce using rule 53 (F)


State 60

   44 E: E . '+' E
   45  | E . '-' E
   46  | E . '*' E
   47  | E . '/' E
   60 ARGs: E . ',' ARGs
   61     | E .

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53
    ','  shift, and go to state 84

    $default  reduce using rule 61 (ARGs)


State 61

   54 F: ID '(' ARGs . ')'

    ')'  shift, and go to state 85


State 62

   26 A: ID LVALUEPROP MAISIGUAL . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 86
    RVALUE  go to state 21
    E       go to state 24
    F       go to state 25


State 63

   21 A: ID LVALUEPROP '+' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 87
    RVALUE  go to state 21
    E       go to state 24
    F       go to state 25


State 64

   22 A: ID LVALUEPROP '-' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 88
    RVALUE  go to state 21
    E       go to state 24
    F       go to state 25


State 65

   20 A: ID LVALUEPROP '=' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 89
    RVALUE  go to state 21
    E       go to state 24
    F       go to state 25


State 66

   43 EBOOL: BOOL .

    $default  reduce using rule 43 (EBOOL)


State 67

   37 EBOOL: A . '<' A
   38      | A . '>' A
   39      | A . IGUAL A
   40      | A . DIFERENTE A

    IGUAL      shift, and go to state 90
    DIFERENTE  shift, and go to state 91
    '<'        shift, and go to state 92
    '>'        shift, and go to state 93


State 68

   27 A: RVALUE .
   41 EBOOL: RVALUE .
   48 E: RVALUE .

    IGUAL      reduce using rule 27 (A)
    IGUAL      [reduce using rule 48 (E)]
    DIFERENTE  reduce using rule 27 (A)
    DIFERENTE  [reduce using rule 48 (E)]
    '+'        reduce using rule 48 (E)
    '-'        reduce using rule 48 (E)
    '*'        reduce using rule 48 (E)
    '/'        reduce using rule 48 (E)
    ')'        reduce using rule 41 (EBOOL)
    ')'        [reduce using rule 48 (E)]
    '<'        reduce using rule 27 (A)
    '<'        [reduce using rule 48 (E)]
    '>'        reduce using rule 27 (A)
    '>'        [reduce using rule 48 (E)]
    $default   reduce using rule 27 (A)


State 69

   34 CMD_IF: IF '(' EBOOL . ')' CMD CMD_ELSE

    ')'  shift, and go to state 94


State 70

   24 A: E .
   42 EBOOL: E .
   44 E: E . '+' E
   45  | E . '-' E
   46  | E . '*' E
   47  | E . '/' E

    '+'  shift, and go to state 50
    '-'  shift, and go to state 51
    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    ')'       reduce using rule 42 (EBOOL)
    $default  reduce using rule 24 (A)


State 71

   33 CMD_WHILE: WHILE '(' EBOOL . ')' CMD

    ')'  shift, and go to state 95


State 72

   15 NOMEVAR: ID '=' . A OUTRAVAR

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 96
    RVALUE  go to state 21
    E       go to state 24
    F       go to state 25


State 73

   17 OUTRAVAR: ',' . NOMEVAR

    ID  shift, and go to state 35

    NOMEVAR  go to state 97


State 74

   16 NOMEVAR: ID OUTRAVAR .

    $default  reduce using rule 16 (NOMEVAR)


State 75

   11 CMD: '{' $@2 CMDs . '}'

    '}'  shift, and go to state 98


State 76

   55 F: '(' E ')' .

    $default  reduce using rule 55 (F)


State 77

   44 E: E . '+' E
   44  | E '+' E .
   45  | E . '-' E
   46  | E . '*' E
   47  | E . '/' E

    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 44 (E)


State 78

   44 E: E . '+' E
   45  | E . '-' E
   45  | E '-' E .
   46  | E . '*' E
   47  | E . '/' E

    '*'  shift, and go to state 52
    '/'  shift, and go to state 53

    $default  reduce using rule 45 (E)


State 79

   44 E: E . '+' E
   45  | E . '-' E
   46  | E . '*' E
   46  | E '*' E .
   47  | E . '/' E

    $default  reduce using rule 46 (E)


State 80

   44 E: E . '+' E
   45  | E . '-' E
   46  | E . '*' E
   47  | E . '/' E
   47  | E '/' E .

    $default  reduce using rule 47 (E)


State 81

   25 A: ID MAISIGUAL A OUTRAVAR .

    $default  reduce using rule 25 (A)


State 82

   29 LVALUEPROP: '[' A ']' . LVALUEPROP
   31           | '[' A ']' .

    '['  shift, and go to state 29
    '.'  shift, and go to state 30

    '['       [reduce using rule 31 (LVALUEPROP)]
    $default  reduce using rule 31 (LVALUEPROP)

    LVALUEPROP  go to state 99


State 83

   30 LVALUEPROP: '.' ID LVALUEPROP .

    $default  reduce using rule 30 (LVALUEPROP)


State 84

   60 ARGs: E ',' . ARGs

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 45
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    RVALUE  go to state 46
    E       go to state 60
    F       go to state 25
    ARGs    go to state 100


State 85

   54 F: ID '(' ARGs ')' .

    $default  reduce using rule 54 (F)


State 86

   26 A: ID LVALUEPROP MAISIGUAL A .

    $default  reduce using rule 26 (A)


State 87

   21 A: ID LVALUEPROP '+' A .

    $default  reduce using rule 21 (A)


State 88

   22 A: ID LVALUEPROP '-' A .

    $default  reduce using rule 22 (A)


State 89

   20 A: ID LVALUEPROP '=' A .

    $default  reduce using rule 20 (A)


State 90

   39 EBOOL: A IGUAL . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 101
    RVALUE  go to state 21
    E       go to state 24
    F       go to state 25


State 91

   40 EBOOL: A DIFERENTE . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 102
    RVALUE  go to state 21
    E       go to state 24
    F       go to state 25


State 92

   37 EBOOL: A '<' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 103
    RVALUE  go to state 21
    E       go to state 24
    F       go to state 25


State 93

   38 EBOOL: A '>' . A

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 12
    '{'     shift, and go to state 40
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    A       go to state 104
    RVALUE  go to state 21
    E       go to state 24
    F       go to state 25


State 94

   34 CMD_IF: IF '(' EBOOL ')' . CMD CMD_ELSE

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    LET     shift, and go to state 9
    CONST   shift, and go to state 10
    VAR     shift, and go to state 11
    '-'     shift, and go to state 12
    ';'     shift, and go to state 13
    '{'     shift, and go to state 14
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    CMD        go to state 105
    VARIAVEL   go to state 19
    A          go to state 20
    RVALUE     go to state 21
    CMD_WHILE  go to state 22
    CMD_IF     go to state 23
    E          go to state 24
    F          go to state 25


State 95

   33 CMD_WHILE: WHILE '(' EBOOL ')' . CMD

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    LET     shift, and go to state 9
    CONST   shift, and go to state 10
    VAR     shift, and go to state 11
    '-'     shift, and go to state 12
    ';'     shift, and go to state 13
    '{'     shift, and go to state 14
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    CMD        go to state 106
    VARIAVEL   go to state 19
    A          go to state 20
    RVALUE     go to state 21
    CMD_WHILE  go to state 22
    CMD_IF     go to state 23
    E          go to state 24
    F          go to state 25


State 96

   15 NOMEVAR: ID '=' A . OUTRAVAR

    ','  shift, and go to state 73

    ','       [reduce using rule 18 (OUTRAVAR)]
    $default  reduce using rule 18 (OUTRAVAR)

    OUTRAVAR  go to state 107


State 97

   17 OUTRAVAR: ',' NOMEVAR .

    $default  reduce using rule 17 (OUTRAVAR)


State 98

   11 CMD: '{' $@2 CMDs '}' .

    $default  reduce using rule 11 (CMD)


State 99

   29 LVALUEPROP: '[' A ']' LVALUEPROP .

    $default  reduce using rule 29 (LVALUEPROP)


State 100

   60 ARGs: E ',' ARGs .

    $default  reduce using rule 60 (ARGs)


State 101

   39 EBOOL: A IGUAL A .

    $default  reduce using rule 39 (EBOOL)


State 102

   40 EBOOL: A DIFERENTE A .

    $default  reduce using rule 40 (EBOOL)


State 103

   37 EBOOL: A '<' A .

    $default  reduce using rule 37 (EBOOL)


State 104

   38 EBOOL: A '>' A .

    $default  reduce using rule 38 (EBOOL)


State 105

   34 CMD_IF: IF '(' EBOOL ')' CMD . CMD_ELSE

    ELSE  shift, and go to state 108

    ELSE      [reduce using rule 36 (CMD_ELSE)]
    $default  reduce using rule 36 (CMD_ELSE)

    CMD_ELSE  go to state 109


State 106

   33 CMD_WHILE: WHILE '(' EBOOL ')' CMD .

    $default  reduce using rule 33 (CMD_WHILE)


State 107

   15 NOMEVAR: ID '=' A OUTRAVAR .

    $default  reduce using rule 15 (NOMEVAR)


State 108

   35 CMD_ELSE: ELSE . CMD

    NUM     shift, and go to state 4
    STRING  shift, and go to state 5
    ID      shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    LET     shift, and go to state 9
    CONST   shift, and go to state 10
    VAR     shift, and go to state 11
    '-'     shift, and go to state 12
    ';'     shift, and go to state 13
    '{'     shift, and go to state 14
    '['     shift, and go to state 15
    '('     shift, and go to state 16

    CMD        go to state 110
    VARIAVEL   go to state 19
    A          go to state 20
    RVALUE     go to state 21
    CMD_WHILE  go to state 22
    CMD_IF     go to state 23
    E          go to state 24
    F          go to state 25


State 109

   34 CMD_IF: IF '(' EBOOL ')' CMD CMD_ELSE .

    $default  reduce using rule 34 (CMD_IF)


State 110

   35 CMD_ELSE: ELSE CMD .

    $default  reduce using rule 35 (CMD_ELSE)
